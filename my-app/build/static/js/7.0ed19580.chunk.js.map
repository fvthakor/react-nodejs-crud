{"version":3,"sources":["services/http-common.js","services/book.service.js","components/books/BookList.js"],"names":["axios","create","baseURL","headers","BookDataService","http","get","data","post","id","delete","put","BookList","history","useState","books","setBooks","getBooks","bookService","getAll","then","response","console","log","catch","e","useEffect","Fragment","class","to","className","width","cellspacing","_","isEmpty","map","book","title","category","quantity","onClick","push","_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed"],"mappings":"yJAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,0CACTC,QAAS,CACP,eAAgB,sBCJhBC,E,sFACF,WACE,OAAOC,EAAKC,IAAI,Y,kBAGlB,SAAKC,GACD,OAAOF,EAAKG,KAAK,QAASD,K,oBAG9B,SAAOE,GACH,OAAOJ,EAAKK,OAAO,SAASD,K,iBAEhC,SAAIA,GACA,OAAOJ,EAAKC,IAAI,SAASG,K,oBAE7B,SAAOA,EAAIF,GACP,OAAOF,EAAKM,IAAI,SAASF,EAAIF,O,KAKtB,QAAIH,G,4HC6FJQ,UA7GE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,EAA4BC,mBAAS,IAArC,mBAAQC,EAAR,KAAeC,EAAf,KA+BMC,EAAW,WACfC,IAAYC,SACXC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GAEZL,EAASK,EAASd,SAEnBiB,OAAM,SAAAC,GACLH,QAAQC,IAAIE,OAMhB,OAHAC,qBAAU,WACRT,MACC,IAGD,aADA,CACC,IAAMU,SAAP,UACE,sBAAKC,MAAM,kBAAX,UAEE,qBAAKA,MAAM,4DAAX,SACI,oBAAIA,MAAM,wBAAV,qBAGJ,qBAAKA,MAAM,MAAX,SACI,qBAAKA,MAAM,sBAAX,SACI,sBAAKA,MAAM,mBAAX,UACI,sBACIA,MAAM,8EADV,UAEI,oBAAIA,MAAM,oCAAV,mBACA,eAAC,IAAD,CAASC,GAAG,YAAYC,UAAU,yBAAlC,UACI,mBAAGF,MAAM,sBAAwB,kDAGzC,qBAAKA,MAAM,YAAX,SACA,qBAAKA,MAAM,mBAAX,SACI,wBAAOA,MAAM,uBAAuBnB,GAAG,YAAYsB,MAAM,OAAOC,YAAY,IAA5E,UACI,gCACI,+BACI,uCACA,0CACA,0CACA,6CAGR,gCACEC,IAAEC,QAAQnB,GAiBJ,2EAhBNA,EAAMoB,KAAI,SAACC,GAAD,OACN,+BACI,6BAAKA,EAAKC,QACV,6BAAKD,EAAKE,WACV,6BAAKF,EAAKG,WACV,+BACI,wBAAQC,QAAS,kBAAM3B,EAAQ4B,KAAR,qBAA2BL,EAAKM,OAAQZ,UAAU,8BAAzE,SACI,mBAAGF,MAAM,iBAEb,wBAAQA,MAAM,6BAA6BY,QAAS,SAACf,GAAD,OApFxEhB,EAoF0F2B,EAAKM,SAnFjHC,IAAKC,KAAK,CACRP,MAAO,gBACPQ,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClB9B,MAAK,SAAC+B,GACHA,EAAOC,aACTlC,IAAYR,OAAOD,GAClBW,MAAK,SAAAC,GACJsB,IAAKC,KACH,WACA,8BACA,WAEF3B,OAKDO,OAAM,SAAAC,GACLH,QAAQC,IAAIE,SAxBD,IAAChB,GAoFoB,SACI,mBAAGmB,MAAM,uBATZQ,EAAKM","file":"static/js/7.0ed19580.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://react-crud-fv.herokuapp.com/api\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n});","import http from \"./http-common\";\r\nclass BookDataService {\r\n    getAll() {\r\n      return http.get(\"/books\");\r\n    }\r\n\r\n    save(data) {\r\n        return http.post(\"/book\", data);\r\n    }\r\n\r\n    delete(id) {\r\n        return http.delete(\"/book/\"+id);\r\n    }\r\n    get(id) {\r\n        return http.get(\"/book/\"+id);\r\n    }\r\n    update(id, data) {\r\n        return http.put(\"/book/\"+id, data);\r\n    }\r\n\r\n    \r\n}\r\nexport default new BookDataService();\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport Swal from 'sweetalert2'\r\nimport bookService from '../../services/book.service';\r\n\r\nconst BookList = ({ history }) => {\r\n  const [ books, setBooks ] = useState([]);\r\n  \r\n  const deleteBook = (id, event) => {\r\n    Swal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        bookService.delete(id)\r\n        .then(response => {\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your book has been deleted.',\r\n            'success'\r\n          )\r\n          getBooks()\r\n          // console.log(response)\r\n          // history.push('/books')\r\n          // setBooks(response.data.data);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n      }\r\n    })\r\n  }\r\n  const getBooks = () => {\r\n    bookService.getAll()\r\n    .then(response => {\r\n      console.log(response)\r\n      // history.push('/books')\r\n      setBooks(response.data);\r\n    })\r\n    .catch(e => {\r\n      console.log(e);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    getBooks();\r\n  }, [])\r\n  return (      \r\n    // getBooks(),\r\n    <React.Fragment>\r\n      <div class=\"container-fluid\">\r\n\r\n        <div class=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n            <h1 class=\"h3 mb-0 text-gray-800\">Books</h1>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-xl-12 col-lg-12\">\r\n                <div class=\"card shadow mb-4\">\r\n                    <div\r\n                        class=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                        <h6 class=\"m-0 font-weight-bold text-primary\">Books</h6>\r\n                        <NavLink to=\"/book/add\" className=\"btn btn-success btn-sm\">\r\n                            <i class=\"fas fa-fw fa-plus\"></i><span>Add Book</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellspacing=\"0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Title</th>\r\n                                    <th>Category</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {!_.isEmpty(books) ? (\r\n                              books.map((book) => (\r\n                                  <tr key={book._id}>\r\n                                      <td>{book.title}</td>\r\n                                      <td>{book.category}</td>\r\n                                      <td>{book.quantity}</td>\r\n                                      <td>\r\n                                          <button onClick={() => history.push(`/book/edit/${book._id}`)} className=\"btn btn-primary btn-sm ml-2\">\r\n                                              <i class=\"fa fa-edit\"></i>\r\n                                          </button>\r\n                                          <button class=\"btn btn-sm btn-danger ml-2\" onClick={(e) => deleteBook(book._id, e)}>\r\n                                              <i class=\"fa fa-trash\"></i>\r\n                                          </button>\r\n                                      </td>\r\n                                  </tr>\r\n                                  ))\r\n                                  ) : (\r\n                                    <p >No books available. Please add some books.</p>\r\n                                  )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default BookList;\r\n"],"sourceRoot":""}